{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAQrC,AANgB,EACX,EAAM,gBAAgB,CAAC,aAAA,MAAA,CAC1B,EAAG,EAAM,gBAAgB,CAAC,aAC1B,EAAG,EAAM,gBAAgB,CAAC,cAGpB,OAAO,CAAC,SAAC,CAAjB,EAGE,IAAM,EAAa,AAFA,EAAI,KAAK,CAAC,EAAE,CAED,SAAS,CAAC,CAAA,GAExC,EAAI,YAAY,CAAC,EAAY,EAAI,KAAK,CAAC,EAAI,KAAK,CAAC,MAAM,CAAG,EAAE,CAC9D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar allRows = _to_consumable_array(table.querySelectorAll(\"thead tr\")).concat(_to_consumable_array(table.querySelectorAll(\"tbody tr\")), _to_consumable_array(table.querySelectorAll(\"tfoot tr\")));\nallRows.forEach(function(row) {\n    var secondCell = row.cells[1];\n    var clonedCell = secondCell.cloneNode(true);\n    row.insertBefore(clonedCell, row.cells[row.cells.length - 1]);\n});\n\n//# sourceMappingURL=index.ff9075ea.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\n\nconst allRows = [\n  ...table.querySelectorAll('thead tr'),\n  ...table.querySelectorAll('tbody tr'),\n  ...table.querySelectorAll('tfoot tr'),\n];\n\nallRows.forEach((row) => {\n  const secondCell = row.cells[1];\n\n  const clonedCell = secondCell.cloneNode(true);\n\n  row.insertBefore(clonedCell, row.cells[row.cells.length - 1]);\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","table","document","querySelector","allRows","querySelectorAll","concat","forEach","row","clonedCell","secondCell","cells","cloneNode","insertBefore"],"version":3,"file":"index.ff9075ea.js.map"}